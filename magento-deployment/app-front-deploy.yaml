apiVersion: v1
kind: Service
metadata:
  namespace: magento-ns
  name: magento-app
  labels:
    app: magento
    component: frontend
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: magento
    component: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: magento-ns
  name: magento
  labels:
    app: magento
    component: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0%
  selector:
    matchLabels:
      app: magento
      component: frontend
  template:
    metadata:
      namespace: magento-ns
      labels:
        app: magento
        component: frontend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
      tolerations:
        - key: cloud.google.com/gke-preemptible
          operator: Equal
          value: "true"
          effect: NoSchedule
      serviceAccountName: magento-ksa
      containers:
        - image: asia.gcr.io/magento2-gke/magento:1
          name: magento
          resources:
            requests:
              memory: 512Mi
              cpu: 500m
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /pub/health_check.php
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 10
          env:
            - name: SECRET_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: magento-secret
                  key: db-password
            - name: SECRET_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: magento-secret
                  key: admin-password
          envFrom:
            - configMapRef:
                name: magento-config
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - "bin/magento setup:install --base-url=$URL \
                    --db-host=$DB_HOST \
                    --db-name=$DB_NAME \
                    --db-user=$DB_USER \
                    --db-password=$SECRET_DB_PASSWORD \
                    --backend-frontname=admin \
                    --admin-firstname=admin \
                    --admin-lastname=admin \
                    --admin-email=$ADMIN_EMAIL \
                    --admin-user=$ADMIN_USER \
                    --admin-password=$SECRET_ADMIN_PASSWORD \
                    --language=ja_JP \
                    --currency=JPY \
                    --timezone=Asia/Tokyo \
                    --use-rewrites=1 \
                    && rm /var/www/magento/app/etc/env.php \
                    && ln -sf /var/www/magento/app/nfs_etc/env.php /var/www/magento/app/etc/env.php \
                    && bin/magento setup:di:compile \
                    && bin/magento setup:static-content:deploy ja_JP"
          volumeMounts:
            - name: nfs-etc-pvc
              mountPath: /var/www/magento/app/nfs_etc
              readOnly: true
            - name: nfs-upload-pvc
              mountPath: /var/www/magento/pub/media/upload
      volumes:
        - name: nfs-etc-pvc
          persistentVolumeClaim:
            claimName: nfs-etc-pvc
        - name: nfs-upload-pvc
          persistentVolumeClaim:
            claimName: nfs-upload-pvc
